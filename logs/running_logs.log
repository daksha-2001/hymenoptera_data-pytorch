[2023-05-27 20:19:02,247: INFO: stage_02_training]: 
********************
[2023-05-27 20:19:02,247: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:19:02,247: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:19:02,253: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:19:02,253: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:19:02,255: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:19:03,862: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:19:03,938: INFO: stage_02_training]: <pandas.io.formats.style.Styler object at 0x000001F4A2CF5DC0>
[2023-05-27 20:19:03,968: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:20:47,713: INFO: stage_02_training]: 
********************
[2023-05-27 20:20:47,713: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:20:47,715: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:20:47,717: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:20:47,718: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:20:47,718: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:20:49,488: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:20:49,488: ERROR: stage_02_training]: module 'torchvision.models' has no attribute 'parameters'
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 95, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 79, in main
    for param in models.parameters():
AttributeError: module 'torchvision.models' has no attribute 'parameters'
[2023-05-27 20:21:21,479: INFO: stage_02_training]: 
********************
[2023-05-27 20:21:21,479: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:21:21,479: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:21:21,487: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:21:21,487: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:21:21,487: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:21:22,873: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:21:22,990: INFO: stage_02_training]: <pandas.io.formats.style.Styler object at 0x00000138FDB36070>
[2023-05-27 20:21:23,022: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:22:46,520: INFO: stage_02_training]: 
********************
[2023-05-27 20:22:46,520: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:22:46,523: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:22:46,526: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:22:46,526: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:22:46,526: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:22:48,542: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:22:48,666: ERROR: stage_02_training]: 'Styler' object has no attribute 'to_string'
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 96, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 83, in main
    logging.info(df.to_string())
AttributeError: 'Styler' object has no attribute 'to_string'
[2023-05-27 20:23:21,302: INFO: stage_02_training]: 
********************
[2023-05-27 20:23:21,302: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:23:21,302: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:23:21,306: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:23:21,306: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:23:21,306: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:23:22,997: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:23:23,016: INFO: stage_02_training]:                 Modules  parameters
0     features.0.weight       23232
1       features.0.bias          64
2     features.3.weight      307200
3       features.3.bias         192
4     features.6.weight      663552
5       features.6.bias         384
6     features.8.weight      884736
7       features.8.bias         256
8    features.10.weight      589824
9      features.10.bias         256
10  classifier.1.weight    37748736
11    classifier.1.bias        4096
12  classifier.4.weight    16777216
13    classifier.4.bias        4096
14  classifier.6.weight     4096000
15    classifier.6.bias        1000
[2023-05-27 20:23:23,030: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:24:11,856: INFO: stage_02_training]: 
********************
[2023-05-27 20:24:11,856: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:24:11,858: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:24:11,858: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:24:11,858: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:24:11,858: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:24:13,501: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:24:13,515: INFO: stage_02_training]: 
                 Modules  parameters
0     features.0.weight       23232
1       features.0.bias          64
2     features.3.weight      307200
3       features.3.bias         192
4     features.6.weight      663552
5       features.6.bias         384
6     features.8.weight      884736
7       features.8.bias         256
8    features.10.weight      589824
9      features.10.bias         256
10  classifier.1.weight    37748736
11    classifier.1.bias        4096
12  classifier.4.weight    16777216
13    classifier.4.bias        4096
14  classifier.6.weight     4096000
15    classifier.6.bias        1000
[2023-05-27 20:24:13,536: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:26:50,231: INFO: stage_02_training]: 
********************
[2023-05-27 20:26:50,231: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:26:50,231: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:26:50,235: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:26:50,235: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:26:50,235: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:26:51,625: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:26:51,630: INFO: stage_02_training]: {'trainable': 16, 'non-trainable': 0}
                 Modules  parameters
0     features.0.weight       23232
1       features.0.bias          64
2     features.3.weight      307200
3       features.3.bias         192
4     features.6.weight      663552
5       features.6.bias         384
6     features.8.weight      884736
7       features.8.bias         256
8    features.10.weight      589824
9      features.10.bias         256
10  classifier.1.weight    37748736
11    classifier.1.bias        4096
12  classifier.4.weight    16777216
13    classifier.4.bias        4096
14  classifier.6.weight     4096000
15    classifier.6.bias        1000
[2023-05-27 20:26:51,652: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:28:21,300: INFO: stage_02_training]: 
********************
[2023-05-27 20:28:21,300: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:28:21,300: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:28:21,305: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:28:21,305: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:28:21,305: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:28:22,700: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:28:22,709: INFO: stage_02_training]: Parameters: {'trainable': 61100840, 'non-trainable': 0}
                 Modules  parameters
0     features.0.weight       23232
1       features.0.bias          64
2     features.3.weight      307200
3       features.3.bias         192
4     features.6.weight      663552
5       features.6.bias         384
6     features.8.weight      884736
7       features.8.bias         256
8    features.10.weight      589824
9      features.10.bias         256
10  classifier.1.weight    37748736
11    classifier.1.bias        4096
12  classifier.4.weight    16777216
13    classifier.4.bias        4096
14  classifier.6.weight     4096000
15    classifier.6.bias        1000
[2023-05-27 20:28:22,740: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:29:21,950: INFO: stage_02_training]: 
********************
[2023-05-27 20:29:21,950: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:29:21,950: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:29:21,955: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:29:21,955: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:29:21,955: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:29:23,185: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear 
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:29:23,185: INFO: stage_02_training]: Parameters: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:29:23,210: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:33:32,840: INFO: stage_02_training]: 
********************
[2023-05-27 20:33:32,840: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:33:32,840: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:33:32,845: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:33:32,847: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:33:32,847: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:33:34,379: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:33:34,379: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:33:34,409: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:33:34,424: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:37:46,869: INFO: stage_02_training]: 
********************
[2023-05-27 20:37:46,869: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:37:46,869: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:37:46,869: ERROR: stage_02_training]: module 'torch.cuda' has no attribute 'is_availavle'
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 111, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 49, in main
    device='cuda' if torch.cuda.is_availavle else "cpu"
AttributeError: module 'torch.cuda' has no attribute 'is_availavle'
[2023-05-27 20:38:11,969: INFO: stage_02_training]: 
********************
[2023-05-27 20:38:11,969: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:38:11,969: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:38:12,118: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:38:12,126: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:38:12,126: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:38:14,213: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:38:14,214: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:38:14,251: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:38:14,588: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:38:14,595: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 20:47:14,318: INFO: stage_02_training]: 
********************
[2023-05-27 20:47:14,327: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:47:14,332: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:47:14,382: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:47:14,382: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:47:14,382: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:47:16,334: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:47:16,340: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:47:16,387: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:47:16,594: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:47:18,817: ERROR: stage_02_training]: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 44, in training
    pred=model(image)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torchvision\models\alexnet.py", line 48, in forward
    x = self.features(x)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
[2023-05-27 20:51:08,116: INFO: stage_02_training]: 
********************
[2023-05-27 20:51:08,116: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:51:08,116: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:51:08,156: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:51:08,156: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:51:08,156: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:51:10,566: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:51:10,606: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:51:10,676: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:51:11,039: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:51:13,468: ERROR: stage_02_training]: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 46, in training
    pred=model(image)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torchvision\models\alexnet.py", line 48, in forward
    x = self.features(x)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
[2023-05-27 20:52:33,072: INFO: stage_02_training]: 
********************
[2023-05-27 20:52:33,072: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:52:33,080: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:52:33,096: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:52:33,096: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:52:33,096: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:52:38,516: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:52:38,524: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:52:38,588: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:52:39,027: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:53:25,956: ERROR: stage_02_training]: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 46, in training
    pred=model(image)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torchvision\models\alexnet.py", line 48, in forward
    x = self.features(x)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
[2023-05-27 20:53:56,006: INFO: stage_02_training]: 
********************
[2023-05-27 20:53:56,006: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:53:56,006: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:53:56,069: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:53:56,069: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:53:56,069: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:53:57,775: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:53:57,775: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:53:57,790: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:53:57,929: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:53:59,298: ERROR: stage_02_training]: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 46, in training
    pred=model(image)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torchvision\models\alexnet.py", line 48, in forward
    x = self.features(x)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
[2023-05-27 20:55:32,935: INFO: stage_02_training]: 
********************
[2023-05-27 20:55:32,935: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:55:32,935: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:55:32,951: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:55:32,951: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:55:32,951: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:55:34,156: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:55:34,156: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:55:34,187: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:55:34,343: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:55:35,396: ERROR: stage_02_training]: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 46, in training
    pred=model(image)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torchvision\models\alexnet.py", line 48, in forward
    x = self.features(x)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Input type (torch.FloatTensor) and weight type (torch.cuda.FloatTensor) should be the same or input should be a MKLDNN tensor and weight is a dense tensor
[2023-05-27 20:57:57,387: INFO: stage_02_training]: 
********************
[2023-05-27 20:57:57,387: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:57:57,389: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:57:57,406: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:57:57,407: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:57:57,407: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:57:58,667: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:57:58,669: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:57:58,694: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:57:58,835: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:58:07,850: ERROR: stage_02_training]: 'Tensor' object has no attribute 'backwards'
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 49, in training
    loss.backwards()
AttributeError: 'Tensor' object has no attribute 'backwards'
[2023-05-27 20:59:06,817: INFO: stage_02_training]: 
********************
[2023-05-27 20:59:06,817: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 20:59:06,817: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 20:59:06,864: INFO: stage_02_training]: Train images Transformed
[2023-05-27 20:59:06,864: INFO: stage_02_training]: Test images Transformed
[2023-05-27 20:59:06,864: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 20:59:09,041: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 20:59:09,052: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 20:59:09,068: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 20:59:09,177: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 20:59:16,892: ERROR: stage_02_training]: one of the variables needed for gradient computation has been modified by an inplace operation: [torch.cuda.FloatTensor [64, 100]], which is output 0 of ReluBackward0, is at version 2; expected version 1 instead. Hint: enable anomaly detection to find the operation that failed to compute its gradient, with torch.autograd.set_detect_anomaly(True).
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 49, in training
    loss.backward()
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\autograd\__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
RuntimeError: one of the variables needed for gradient computation has been modified by an inplace operation: [torch.cuda.FloatTensor [64, 100]], which is output 0 of ReluBackward0, is at version 2; expected version 1 instead. Hint: enable anomaly detection to find the operation that failed to compute its gradient, with torch.autograd.set_detect_anomaly(True).
[2023-05-27 21:01:52,715: INFO: stage_02_training]: 
********************
[2023-05-27 21:01:52,736: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 21:01:52,747: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 21:01:52,779: INFO: stage_02_training]: Train images Transformed
[2023-05-27 21:01:52,780: INFO: stage_02_training]: Test images Transformed
[2023-05-27 21:01:52,780: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 21:01:55,151: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 21:01:55,153: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 21:01:55,167: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 21:01:55,277: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 21:02:03,957: ERROR: stage_02_training]: 'Tensor' object is not callable
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 47, in training
    loss=loss(pred,label)
TypeError: 'Tensor' object is not callable
[2023-05-27 21:03:50,864: INFO: stage_02_training]: 
********************
[2023-05-27 21:03:50,864: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 21:03:50,864: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 21:03:50,911: INFO: stage_02_training]: Train images Transformed
[2023-05-27 21:03:50,911: INFO: stage_02_training]: Test images Transformed
[2023-05-27 21:03:50,911: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 21:03:52,413: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 21:03:52,413: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 21:03:52,444: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 21:03:52,554: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 21:03:58,343: ERROR: stage_02_training]: 'Tensor' object is not callable
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 119, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 104, in main
    training(model=model,train_data_loader=train_data_loader,num_eopch=num_epoch,device=device,loss=criterion,optimizer=optimizer)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 47, in training
    loss=loss(pred,label)
TypeError: 'Tensor' object is not callable
[2023-05-27 21:05:41,398: INFO: stage_02_training]: 
********************
[2023-05-27 21:05:41,398: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 21:05:41,398: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 21:05:41,430: INFO: stage_02_training]: Train images Transformed
[2023-05-27 21:05:41,430: INFO: stage_02_training]: Test images Transformed
[2023-05-27 21:05:41,430: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 21:05:43,322: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 21:05:43,322: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 21:05:43,353: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 21:05:43,447: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 21:06:16,713: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 21:06:36,099: INFO: stage_02_training]: 
********************
[2023-05-27 21:06:36,099: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 21:06:36,101: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 21:06:36,131: INFO: stage_02_training]: Train images Transformed
[2023-05-27 21:06:36,132: INFO: stage_02_training]: Test images Transformed
[2023-05-27 21:06:36,133: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 21:06:37,229: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 21:06:37,233: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 21:06:37,252: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 21:06:37,374: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 21:06:59,288: INFO: stage_02_training]: None
[2023-05-27 21:06:59,291: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 21:19:18,906: INFO: stage_02_training]: 
********************
[2023-05-27 21:19:18,906: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 21:19:18,908: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 21:19:18,930: INFO: stage_02_training]: Train images Transformed
[2023-05-27 21:19:18,931: INFO: stage_02_training]: Test images Transformed
[2023-05-27 21:19:18,931: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 21:19:19,855: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 21:19:19,858: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 21:19:19,882: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 21:19:19,990: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 21:19:47,586: INFO: stage_02_training]: Training complete for 10
[2023-05-27 21:19:47,592: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 21:20:10,639: INFO: stage_02_training]: 
********************
[2023-05-27 21:20:10,639: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 21:20:10,639: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 21:20:10,702: INFO: stage_02_training]: Train images Transformed
[2023-05-27 21:20:10,702: INFO: stage_02_training]: Test images Transformed
[2023-05-27 21:20:10,702: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 21:20:11,734: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 21:20:11,734: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 21:20:11,765: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 21:20:11,891: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 21:20:51,788: INFO: stage_02_training]: Training complete for 10 and loss is 0.04942357540130615
[2023-05-27 21:20:51,800: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 23:27:30,647: INFO: stage_02_training]: 
********************
[2023-05-27 23:27:30,777: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 23:27:30,785: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:27:32,374: INFO: stage_02_training]: Train images Transformed
[2023-05-27 23:27:32,903: INFO: stage_02_training]: Test images Transformed
[2023-05-27 23:27:32,907: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 23:27:39,061: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 23:27:39,271: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 23:27:39,311: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 23:27:40,131: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 23:27:40,136: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 23:29:05,986: INFO: stage_02_training]: 
********************
[2023-05-27 23:29:05,997: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 23:29:05,999: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:29:06,031: INFO: stage_02_training]: Train images Transformed
[2023-05-27 23:29:06,036: INFO: stage_02_training]: Test images Transformed
[2023-05-27 23:29:06,036: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 23:29:08,377: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 23:29:08,380: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 23:29:08,426: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 23:29:08,599: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 23:29:08,603: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 23:30:47,666: INFO: stage_02_training]: 
********************
[2023-05-27 23:30:47,666: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 23:30:47,666: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:30:47,686: INFO: stage_02_training]: Train images Transformed
[2023-05-27 23:30:47,690: INFO: stage_02_training]: Test images Transformed
[2023-05-27 23:30:47,690: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 23:30:49,326: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 23:30:49,330: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 23:30:49,366: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 23:30:49,550: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 23:30:50,373: ERROR: stage_02_training]: Parent directory hymenoptera_data\data\hymenoptera_data\models does not exist.
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 126, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 111, in main
    torch.save(model,model_save_path)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\serialization.py", line 440, in save
    with _open_zipfile_writer(f) as opened_zipfile:
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\serialization.py", line 315, in _open_zipfile_writer
    return container(name_or_buffer)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\serialization.py", line 288, in __init__
    super().__init__(torch._C.PyTorchFileWriter(str(name)))
RuntimeError: Parent directory hymenoptera_data\data\hymenoptera_data\models does not exist.
[2023-05-27 23:31:57,032: INFO: stage_02_training]: 
********************
[2023-05-27 23:31:57,032: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 23:31:57,040: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:31:57,075: INFO: stage_02_training]: Train images Transformed
[2023-05-27 23:31:57,075: INFO: stage_02_training]: Test images Transformed
[2023-05-27 23:31:57,075: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 23:31:58,622: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 23:31:58,622: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 23:31:58,654: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 23:31:58,804: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 23:31:58,808: INFO: common]: created directory at: hymenoptera_data\data
[2023-05-27 23:31:58,815: INFO: common]: created directory at: hymenoptera_data\models
[2023-05-27 23:31:59,438: ERROR: stage_02_training]: Parent directory hymenoptera_data\data\hymenoptera_data\models does not exist.
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 128, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_02_training.py", line 113, in main
    torch.save(model,model_save_path)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\serialization.py", line 440, in save
    with _open_zipfile_writer(f) as opened_zipfile:
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\serialization.py", line 315, in _open_zipfile_writer
    return container(name_or_buffer)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\serialization.py", line 288, in __init__
    super().__init__(torch._C.PyTorchFileWriter(str(name)))
RuntimeError: Parent directory hymenoptera_data\data\hymenoptera_data\models does not exist.
[2023-05-27 23:33:45,951: INFO: stage_02_training]: 
********************
[2023-05-27 23:33:45,951: INFO: stage_02_training]: >>>>> stage Training started <<<<<
[2023-05-27 23:33:45,955: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:33:45,979: INFO: stage_02_training]: Train images Transformed
[2023-05-27 23:33:45,979: INFO: stage_02_training]: Test images Transformed
[2023-05-27 23:33:45,979: INFO: stage_02_training]: Label_map is {'ants': 0, 'bees': 1}
[2023-05-27 23:33:47,467: INFO: stage_02_training]: AlexNet(
  (features): Sequential(
    (0): Conv2d(3, 64, kernel_size=(11, 11), stride=(4, 4), padding=(2, 2))
    (1): ReLU(inplace=True)
    (2): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (3): Conv2d(64, 192, kernel_size=(5, 5), stride=(1, 1), padding=(2, 2))
    (4): ReLU(inplace=True)
    (5): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
    (6): Conv2d(192, 384, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (7): ReLU(inplace=True)
    (8): Conv2d(384, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (9): ReLU(inplace=True)
    (10): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (11): ReLU(inplace=True)
    (12): MaxPool2d(kernel_size=3, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (avgpool): AdaptiveAvgPool2d(output_size=(6, 6))
  (classifier): Sequential(
    (0): Dropout(p=0.5, inplace=False)
    (1): Linear(in_features=9216, out_features=4096, bias=True)
    (2): ReLU(inplace=True)
    (3): Dropout(p=0.5, inplace=False)
    (4): Linear(in_features=4096, out_features=4096, bias=True)
    (5): ReLU(inplace=True)
    (6): Linear(in_features=4096, out_features=1000, bias=True)
  )
)
[2023-05-27 23:33:47,473: INFO: stage_02_training]: Parameters count before modifying Classifier Layer: {'trainable': 0, 'non-trainable': 61100840}
 Empty DataFrame
Columns: [Modules, parameters]
Index: []
[2023-05-27 23:33:47,500: INFO: stage_02_training]: Parameters count after modifying Classifier Layer: {'trainable': 921902, 'non-trainable': 2469696}
                Modules  parameters
0  classifier.0.weight      921600
1    classifier.0.bias         100
2  classifier.3.weight         200
3    classifier.3.bias           2
[2023-05-27 23:33:47,671: INFO: stage_02_training]: Model Device = cuda set
[2023-05-27 23:33:47,673: INFO: common]: created directory at: hymenoptera_data\data\hymenoptera_data\models
[2023-05-27 23:33:48,063: INFO: stage_02_training]: Model saved at hymenoptera_data\data\hymenoptera_data\models\transfer-model.pth
[2023-05-27 23:33:48,067: INFO: stage_02_training]: >>>>> stage Training completed!<<<<<

[2023-05-27 23:57:29,011: INFO: stage_03_testing]: 
********************
[2023-05-27 23:57:29,015: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-27 23:57:29,019: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:57:30,828: ERROR: stage_03_testing]: argmax(): argument 'input' (position 1) must be Tensor, not numpy.ndarray
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 82, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 62, in main
    pred,target=evaluate(test_data_loader=test_data_loader,device=device)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 62, in evaluate
    pred=np.concatenate(pred,torch.argmax(pred,1).cpu().numpy())
TypeError: argmax(): argument 'input' (position 1) must be Tensor, not numpy.ndarray
[2023-05-27 23:58:56,286: INFO: stage_03_testing]: 
********************
[2023-05-27 23:58:56,286: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-27 23:58:56,289: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:59:08,280: ERROR: stage_03_testing]: only integer scalar arrays can be converted to a scalar index
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 82, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 62, in main
    pred,target=evaluate(test_data_loader=test_data_loader,device=device,model=model)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 63, in evaluate
    pred=np.concatenate(pred,torch.argmax(output,1).cpu().numpy())
  File "<__array_function__ internals>", line 180, in concatenate
TypeError: only integer scalar arrays can be converted to a scalar index
[2023-05-27 23:59:46,838: INFO: stage_03_testing]: 
********************
[2023-05-27 23:59:46,838: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-27 23:59:46,879: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-27 23:59:57,881: ERROR: stage_03_testing]: only integer scalar arrays can be converted to a scalar index
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 82, in <module>
    logging.info(f">>>>> stage {STAGE} started <<<<<")
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 62, in main
    pred,target=evaluate(test_data_loader=test_data_loader,device=device,model=model)
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 63, in evaluate
    pred=np.concatenate(pred,torch.argmax(y_pred,1).cpu().numpy())
  File "<__array_function__ internals>", line 180, in concatenate
TypeError: only integer scalar arrays can be converted to a scalar index
[2023-05-28 00:01:59,067: INFO: stage_03_testing]: 
********************
[2023-05-28 00:01:59,067: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:01:59,076: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:02:14,484: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:02:15,052: ERROR: stage_03_testing]: iteration over a 0-d tensor
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 83, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 68, in main
    print({val:key for key,val in label})
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 68, in <dictcomp>
    print({val:key for key,val in label})
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\_tensor.py", line 930, in __iter__
    raise TypeError("iteration over a 0-d tensor")
TypeError: iteration over a 0-d tensor
[2023-05-28 00:03:42,542: INFO: stage_03_testing]: 
********************
[2023-05-28 00:03:42,542: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:03:42,545: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:04:02,715: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:04:04,218: ERROR: stage_03_testing]: a Tensor with 64 elements cannot be converted to Scalar
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 83, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 68, in main
    print({val:key for key,val in label.item()})
RuntimeError: a Tensor with 64 elements cannot be converted to Scalar
[2023-05-28 00:04:35,389: INFO: stage_03_testing]: 
********************
[2023-05-28 00:04:35,389: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:04:35,395: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:04:51,532: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:04:52,806: ERROR: stage_03_testing]: 'Tensor' object has no attribute 'items'
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 83, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 68, in main
    print({val:key for key,val in label.items()})
AttributeError: 'Tensor' object has no attribute 'items'
[2023-05-28 00:05:44,731: INFO: stage_03_testing]: 
********************
[2023-05-28 00:05:44,731: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:05:44,733: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:05:53,113: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:05:53,817: INFO: stage_03_testing]: >>>>> stage Model Testing completed!<<<<<

[2023-05-28 00:07:40,197: INFO: stage_03_testing]: 
********************
[2023-05-28 00:07:40,197: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:07:40,201: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:07:49,543: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:07:49,545: INFO: stage_03_testing]: >>>>> stage Model Testing completed!<<<<<

[2023-05-28 00:09:52,035: INFO: stage_03_testing]: 
********************
[2023-05-28 00:09:52,039: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:09:52,041: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:10:05,130: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:10:32,543: INFO: stage_03_testing]: >>>>> stage Model Testing completed!<<<<<

[2023-05-28 00:12:22,008: INFO: stage_03_testing]: 
********************
[2023-05-28 00:12:22,008: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:12:22,011: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:12:39,020: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:12:42,393: INFO: stage_03_testing]: >>>>> stage Model Testing completed!<<<<<

[2023-05-28 00:14:45,631: INFO: stage_03_testing]: 
********************
[2023-05-28 00:14:45,631: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:14:45,635: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:15:00,956: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:29:22,026: INFO: stage_03_testing]: 
********************
[2023-05-28 00:29:22,026: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:29:22,039: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:29:36,036: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:29:39,612: ERROR: stage_03_testing]: Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [1, 64, 3, 224, 224]
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 94, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 77, in main
    prediction_viz(img=image,inv_label_map=inv_label_map,std=std,mean=mean,device=device,model=model,
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 69, in prediction_viz
    pred_prob=F.softmax(model(img),dim=1)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torchvision\models\alexnet.py", line 48, in forward
    x = self.features(x)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\container.py", line 217, in forward
    input = module(input)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 463, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "C:\Users\uchag\anaconda3\lib\site-packages\torch\nn\modules\conv.py", line 459, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Expected 3D (unbatched) or 4D (batched) input to conv2d, but got input of size: [1, 64, 3, 224, 224]
[2023-05-28 00:33:33,363: INFO: stage_03_testing]: 
********************
[2023-05-28 00:33:33,363: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:33:33,373: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:33:52,443: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:33:55,317: ERROR: stage_03_testing]: tensor(0)
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 94, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 77, in main
    prediction_viz(img=image[2],inv_label_map=inv_label_map,std=std,mean=mean,device=device,model=model,
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 71, in prediction_viz
    logging.info(f'Actual Label:{inv_label_map[label]},pred label:{inv_label_map[argmax].item()}')
KeyError: tensor(0)
[2023-05-28 00:35:12,218: INFO: stage_03_testing]: 
********************
[2023-05-28 00:35:12,218: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:35:12,223: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:35:25,146: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:35:28,875: ERROR: stage_03_testing]: tensor(0)
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 94, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 77, in main
    prediction_viz(img=image[2],inv_label_map=inv_label_map,std=std,mean=mean,device=device,model=model,
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 71, in prediction_viz
    logging.info(f'Actual Label:{inv_label_map[label].item()},pred label:{inv_label_map[argmax]}')
KeyError: tensor(0)
[2023-05-28 00:36:16,279: INFO: stage_03_testing]: 
********************
[2023-05-28 00:36:16,279: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:36:16,287: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:36:27,457: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:36:28,817: INFO: model_creation]: Actual Label:bees,pred label:ants
[2023-05-28 00:36:28,957: ERROR: stage_03_testing]: list indices must be integers or slices, not tuple
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 94, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 77, in main
    prediction_viz(img=image[2],inv_label_map=inv_label_map,std=std,mean=mean,device=device,model=model,
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 78, in prediction_viz
    img = img.cpu()*std[:, None, None] + mean[:, None, None]
TypeError: list indices must be integers or slices, not tuple
[2023-05-28 00:39:42,733: INFO: stage_03_testing]: 
********************
[2023-05-28 00:39:42,733: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:39:42,743: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:39:54,936: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:39:57,834: INFO: model_creation]: Actual Label:bees,pred label:bees
[2023-05-28 00:39:57,979: ERROR: stage_03_testing]: name 'label_map' is not defined
Traceback (most recent call last):
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 94, in <module>
    main(config_path=parsed_args.config)
  File "E:\Machine Learning Projects\hymenoptera_data-pytorch\src\stage_03_testing.py", line 77, in main
    prediction_viz(img=image[2],inv_label_map=inv_label_map,std=std,mean=mean,device=device,model=model,
  File "e:\machine learning projects\hymenoptera_data-pytorch\src\utils\model_creation.py", line 86, in prediction_viz
    ax2.set_yticklabels(label_map.keys(), size="small")
NameError: name 'label_map' is not defined
[2023-05-28 00:41:08,832: INFO: stage_03_testing]: 
********************
[2023-05-28 00:41:08,832: INFO: stage_03_testing]: >>>>> stage Model Testing started <<<<<
[2023-05-28 00:41:08,841: INFO: common]: yaml file: configs/config.yaml loaded successfully
[2023-05-28 00:41:25,660: INFO: stage_03_testing]: Model evaluation done
[2023-05-28 00:41:27,584: INFO: model_creation]: Actual Label:ants,pred label:ants
[2023-05-28 00:41:27,742: INFO: stage_03_testing]: >>>>> stage Model Testing completed!<<<<<

